name: Build and push backend image
on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: Version
        options:
          - Major
          - Minor
          - Patch
env:
  MAJOR: ${{ vars.BACKEND_VERSION_MAJOR }}
  MINOR: ${{ vars.BACKEND_VERSION_MINOR }}
  PATCH: ${{ vars.BACKEND_VERSION_PATCH }}
permissions:
  id-token: write
  contents: read
jobs:
  BuildPush:
    name: Build and push backend image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Update version tag
        env:
          VERSION_MAJOR_VAR_NAME: BACKEND_VERSION_MAJOR
          VERSION_MINOR_VAR_NAME: BACKEND_VERSION_MINOR
          VERSION_PATCH_VAR_NAME: BACKEND_VERSION_PATCH
          TOKEN: ${{ secrets.VAXSUL_TOKEN }}
        run: |
          case ${{ inputs.version }} in
              Major)  echo "MAJOR=$((MAJOR+1))" >> $GITHUB_ENV
                      echo "MINOR=0" >> $GITHUB_ENV
                      echo "PATCH=0" >> $GITHUB_ENV
                      curl -L -X PATCH -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer $TOKEN" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          ${{ github.api_url }}/repos/${{ github.repository }}/actions/variables/$VERSION_MAJOR_VAR_NAME \
                          -d "{\"name\": \"$VERSION_MAJOR_VAR_NAME\", \"value\": \"$((MAJOR+1))\"}"
                      curl -L -X PATCH -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer $TOKEN" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          ${{ github.api_url}}/repos/${{ github.repository }}/actions/variables/$VERSION_MINOR_VAR_NAME \
                          -d '{"name": "$VERSION_MINOR_VAR_NAME", "value": "0"}'
                      curl -L -X PATCH -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer $TOKEN" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          ${{ github.api_url}}/repos/${{ github.repository }}/actions/variables/$VERSION_PATCH_VAR_NAME \
                          -d '{"name": "$VERSION_PATCH_VAR_NAME", "value": "0"}'
                      ;;
              Minor)  echo "MINOR=$((MINOR+1))" >> $GITHUB_ENV
                      echo "PATCH=0" >> $GITHUB_ENV
                      curl -L -X PATCH -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer $TOKEN" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          ${{ github.api_url}}/repos/${{ github.repository }}/actions/variables/$VERSION_MINOR_VAR_NAME \
                          -d "{\"name\": \"$VERSION_MINOR_VAR_NAME\", \"value\": \"$((MINOR+1))\"}"
                      curl -L -X PATCH -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer $TOKEN" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          ${{ github.api_url}}/repos/${{ github.repository }}/actions/variables/$VERSION_PATCH_VAR_NAME \
                          -d '{"name": "$VERSION_PATCH_VAR_NAME", "value": "0"))}'
                      ;;
              Patch)  echo "PATCH=$((PATCH+1))" >> $GITHUB_ENV
                      curl -L -X PATCH -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer $TOKEN" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          ${{ github.api_url}}/repos/${{ github.repository }}/actions/variables/$VERSION_PATCH_VAR_NAME \
                          -d "{\"name\": \"$VERSION_PATCH_VAR_NAME\", \"value\": \"$((PATCH+1))\"}"
                      ;;
          esac


      - name: Build and push Docker image
        env:
          REPO: ${{ steps.login-ecr.outputs.registry }}/vaxsul_backend
        working-directory: ./vaxsul_backend
        run: docker buildx build . -t $REPO:${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }} -t $REPO:latest --push